{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","state","input","select","filter","All","Completed","todo","completed","Active","handleChange","event","target","name","value","setState","this","props","todos","selectUser","newTodos","title","includes","className","type","onChange","map","key","id","readOnly","onClick","userId","React","Component","CurrentUser","user","changeUser","fetch","then","response","json","result","data","getUser","email","phone","clearSelectedUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeee1cf1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    input: '',\n    select: 'All',\n  }\n\n  filter = {\n    All: () => true,\n    Completed: todo => todo.completed,\n    Active: todo => !todo.completed,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { input, select } = this.state;\n    const newTodos = todos.filter(todo => todo.title.includes(input)\n      && this.filter[select](todo));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            name=\"input\"\n            value={input}\n            className=\"TodoList__input\"\n            onChange={this.handleChange}\n          />\n\n          <select\n            name=\"select\"\n            value={select}\n            className=\"TodoList__input\"\n            onChange={this.handleChange}\n          >\n            <option>All</option>\n            <option>Active</option>\n            <option>Completed</option>\n          </select>\n\n          <ul className=\"TodoList__list\">\n            {newTodos.map(todo => (\n              <li\n                className={\n                  `TodoList__item ${todo.completed\n                    ? 'TodoList__item--checked'\n                    : 'TodoList__item--unchecked'}`\n                }\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>\n                    {todo.title}\n                  </p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n\n    this.changeUser(userId);\n  }\n\n  componentDidUpdate() {\n    const { userId } = this.props;\n\n    if (this.state.user.id === userId) {\n      return;\n    }\n\n    this.changeUser(userId);\n  }\n\n  changeUser(userId) {\n    getUser(userId)\n      .then((user) => {\n        this.setState({\n          user,\n        });\n      });\n  }\n\n  render() {\n    const { user: { name, id, email, phone } } = this.state;\n    const { clearSelectedUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${id}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear button\"\n          onClick={clearSelectedUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n","const API_TODOS = `https://mate-api.herokuapp.com/todos`;\nconst API_USERS = `https://mate-api.herokuapp.com/users`;\n\nexport function getTodos() {\n  return fetch(API_TODOS)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getUser(userId) {\n  return fetch(`${API_USERS}/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: todos.filter(todo => todo.id && todo.title),\n        });\n      });\n  }\n\n  selectUser = (selectedUserId) => {\n    this.setState({\n      selectedUserId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}